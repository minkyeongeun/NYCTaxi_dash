---
title: "NYCTaxi"
author: "민경은"
format: dashboard
execute: 
  enabled: true
  cache: false
  freeze: false
---

```{python}
#| output: false
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.io as pio
import json
import requests
import pickle

pd.options.plotting.backend = "plotly"
pio.templates.default = "plotly_white"

df = pd.read_csv("https://raw.githubusercontent.com/guebin/DV2023/main/posts/NYCTaxi.csv").assign(
    log_trip_duration = lambda df: np.log(df.trip_duration),
    pickup_datetime = lambda df: df.pickup_datetime.apply(pd.to_datetime),
    dropoff_datetime = lambda df: df.dropoff_datetime.apply(pd.to_datetime),
    dist = lambda df: np.sqrt((df.pickup_latitude-df.dropoff_latitude)**2 + (df.pickup_longitude-df.dropoff_longitude)**2),
    #---#
    vendor_id = lambda df: df.vendor_id.map({1:'A',2:'B'})
).assign(
    speed = lambda df: df.dist / df.trip_duration,
    pickup_hour = lambda df: df.pickup_datetime.dt.hour,
    dropoff_hour = lambda df: df.dropoff_datetime.dt.hour,
    dayofweek = lambda df: df.pickup_datetime.dt.dayofweek
)
df_small = df[::100].reset_index(drop=True)

#(1) 요일, 시간에 따른 평균속력 시각화
day_map = {0: '월', 1: '화', 2: '수', 3: '목', 4: '금', 5: '토', 6: '일'}

# 시간대별 평균 속력 계산
average_speed_by_hour = df.groupby('pickup_hour')['speed'].mean()

# 시간대를 0~23에서 월, 화, 수 등의 문자로 변환
df['day'] = df['dayofweek'].map(day_map)

# 요일과 시간대별 평균 속력 계산
average_speed_by_day_hour = df.groupby(['day', 'pickup_hour'])['speed'].mean().reset_index()

# 요일, 시간대별 평균 이동거리 계산
average_distance_by_day_hour = df.groupby(['day', 'pickup_hour'])['dist'].mean().reset_index()

# 1-(1)요일 및 시간대별 평균 속력 시각화
fig1 = px.line(average_speed_by_day_hour, x='pickup_hour', y='speed', color='day',
              labels={'pickup_hour': '시간', 'speed': '평균 속력', 'day': '요일'},
              title='요일 및 시간대별 평균 속력')

#1-(2) 요일 및 시간대별 평균 이동거리 시각화
fig2 = px.line(average_distance_by_day_hour, x='pickup_hour', y='dist', color='day',
              labels={'pickup_hour': '시간', 'dist': '평균 이동거리', 'day': '요일'},
              title='요일 및 시간대별 평균 이동거리')

#1-(3) 속력별 경로 시각화
fig= df_small.assign(
    speed_cut = pd.qcut(df_small.speed, 4, labels=['매우느림','조금느림','조금빠름','매우빠름'])
).sort_values('speed_cut')

fig3 = px.line_mapbox(
    data_frame=fig,
    lat='pickup_latitude',
    lon='pickup_longitude',
    color='speed_cut',
    center={'lat': 40.7322, 'lon': -73.9052},
    mapbox_style='carto-positron',
    zoom=11,
)

scatter_data = px.scatter_mapbox(
    data_frame=fig,
    lat='pickup_latitude',
    lon='pickup_longitude',
    size='passenger_count',
    size_max=10,
    color='speed_cut',
    mapbox_style='carto-positron',
    zoom=11,
).data

for sd in scatter_data:
    fig3.add_trace(sd)

fig3.update_traces(
    line={'width': 1},
    opacity=0.8
)

```

# 기말고사1-(1),(2)

```{python}
#| title: 요일,시간에 따른 평균속력 시각화        
fig1.show()
```

```{python}
#| title: 요일,시간에 따른 평균이동거리 시각화        
fig2.show()
```

# 기말고사1-(3)

```{python}
#| title: 속력별 경로 시각화
fig3.show(config={'scrollZoom': False})
```